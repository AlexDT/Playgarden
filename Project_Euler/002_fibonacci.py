#
#    ONLY READ THIS IF YOU HAVE ALREADY SOLVED THIS PROBLEM!
#    File created for http://projecteuler.net/
#
#    Created by: Alex Dias Teixeira
#    Name:       002_fibonacci.py
#    Date:       08 Sept 2013
#
#    Problem:    [2] - Even Fibonnaci numbers
#        Each new term in the Fibonacci sequence is generated by adding the
#        previous two terms. By starting with 1 and 2, the first 10 terms will be:
#        
#        1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#        
#        By considering the terms in the Fibonacci sequence whose values do not exceed
#        four million, find the sum of the even-valued terms.
#

def fibonacci():
    '''(None) -> integer
    
    This function will generate an integer. This integer is the sum of all the
    even fibonacci number under 4.000.000.
    
    >>> fibonacci()
    4613732
    '''
    a = 0                   # Given first number in the fibonacci sequence
    b = 1                   # Given second number in the fibonacci sequence
    c = 0                   # Creates the variable for the new fibonacci number in the sequence
    som = 0                 # Creates the variable to add the even fibonacci numbers to

    while som < 4000000:    # Keeps adding until fibonacci number reaches 4.000.000
        c = a + b           # Creates new fibonacci number
        a = b               # Replaces a with b
        b = c               # Replaces b with c
        if c % 2 == 0:      # Checks if fibonacci number is an even number
            som = som + c   # Adds the even fibonacci numbers to the sum
    return som              # Gives an integer back to the functioncall 

print fibonacci()           # Calls the function
